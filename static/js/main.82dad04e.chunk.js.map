{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Junior","JuniorPlus","Message","props","className","classes","Main","Image","src","avatar","alt","Name","name","Text","message","Time","time","today","Date","currentTime","getHours","getMinutes","getSeconds","HW1","useState","data","map","index","Affair","homework","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","a","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","elem","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","e","target","trim","alert","HW3","setUsers","console","log","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","PATH","Routes","path","exact","render","to","Header","id","htmlFor","activeClassName","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.82dad04e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Message_Main__lZCUc\",\"Message\":\"Message_Message__XAgzQ\",\"Image\":\"Message_Image__2ImLM\",\"Name\":\"Message_Name__3FCnn\",\"Time\":\"Message_Time__3u6Pb\",\"Text\":\"Message_Text__icuA2\",\"TypeText\":\"Message_TypeText__3VukT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homework\":\"Affairs_homework__10RYJ\",\"name\":\"Affairs_name__3BoZ6\",\"priority\":\"Affairs_priority__fgPJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3EQmV\",\"errorInput\":\"SuperInputText_errorInput__1Jmom\",\"error\":\"SuperInputText_error__z8pCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3MIuJ\",\"column\":\"HW4_column__3MaQV\",\"testSpanError\":\"HW4_testSpanError__3OK4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1N9-a\",\"red\":\"SuperButton_red__HmWEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__4fQDi\",\"spanClassName\":\"SuperCheckbox_spanClassName__EJ7fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Tauzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3vGj-\",\"error\":\"Greeting_error__2YEpY\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\n\nfunction Junior() {\n    return (\n        <div>\n            {/*<HW7/>*/}\n            {/*<HW8/>*/}\n            {/*<HW9/>*/}\n            {/*<HW10/>*/}\n            {/*<HW11/>*/}\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            {/*<HW12/>*/}\n            {/*<HW13/>*/}\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport classes from './Message.module.css'\n\ntype MessageProps = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\nfunction Message(props: MessageProps) {\n    return (\n        <>\n            <div className={classes.Main}>\n                <img className={classes.Image} src={props.avatar} alt='Avatar'/>\n                <div className={classes.Message}>\n                    <p className={classes.Name}>{props.name}</p>\n                    <span className={classes.Text}>{props.message}</span>\n                    <p className={classes.Time}>{props.time}</p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Message\n","import React, {useState} from 'react'\nimport Message from \"./Message\";\n// import AlternativeMessage from \"./AlternativeMessage\";\n\n//\nlet today = new Date()\nlet currentTime = `${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`;\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'MyName',\n    message: 'some text',\n    time: currentTime,\n}\n\nfunction HW1() {\n\n    const [data, setData] = useState([{\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n        name: 'MyName',\n        message: 'some text',\n        time: currentTime,\n    }, {\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n        name: 'MyName',\n        message: 'some text',\n        time: currentTime,\n    }])\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {data.map( (message, index) => <Message\n                key={index}\n                avatar={message.avatar}\n                name={message.name}\n                message={message.message}\n                time={message.time}\n            />)}\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage*/}\n            {/*    avatar={messageData.avatar}*/}\n            {/*    name={messageData.name}*/}\n            {/*    message={messageData.message}*/}\n            {/*    time={messageData.time}*/}\n            {/*/>*/}\n            <hr/>\n        </div>\n    )\n}\n// function getCurrentDate(separator=''){\n//\n//     let newDate = new Date()\n//     let date = newDate.getDate();\n//     let month = newDate.getMonth() + 1;\n//     let year = newDate.getFullYear();\n//\n//     return `${separator}${date}.${month<10?`0${month}`:`${month}`}.${year}${separator}`\n// }\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2'\nimport classes from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void  //need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div>\n            {\n                <div className={classes.homework}>\n                    <span className={classes.name}>{props.affair.name}</span>\n                    <span className={classes.priority}>[{props.affair.priority}]</span>\n                </div>\n            }\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\nexport type AffairType = { _id: number, name: string, priority: AffairPriorityType } // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n\n    if(filter === 'high') return affairs.filter(elem => elem.priority === 'high')\n    else if(filter === 'low') return affairs.filter(elem => elem.priority === 'low')\n    else if(filter === 'middle') return affairs.filter(elem => elem.priority === 'middle')\n    else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(elem => elem._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            {error\n                ? <button disabled={true} onClick={addUser}>add</button>\n                : <button onClick={addUser}>add</button>}\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<boolean>(false) // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>): void => { // need to fix any\n        e.target.value.trim() === '' ? setError(true) : setError(false) // need to fix\n        if(e.target.value !== ' ') setName(e.target.value.trim())\n        else setName('')\n    }\n\n    const addUser = () => {\n        alert(`Hello ${name} !`)\n        addUserCallback(name)\n        setName('')      // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([{_id: v1(), name: name},...users]) // need to fix\n    }\n    console.log(users)\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport Error404 from \"./pages/Error404\";\nimport Junior from './pages/Junior';\nimport JuniorPlus from './pages/JuniorPlus';\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} exact render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} exact render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} exact render={() => <JuniorPlus/>}/>\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {PATH} from './Routes'\nimport './Header.css'\n\nfunction Header() {\n    return (\n        <div className='header'>\n            <input type=\"checkbox\" id=\"hmt\" className=\"hidden-menu-ticker\"/>\n\n            <label className=\"btn-menu\" htmlFor=\"hmt\">\n                <span className=\"first\"></span>\n                <span className=\"second\"></span>\n                <span className=\"third\"></span>\n            </label>\n            <ul className=\"hidden-menu\">\n                <NavLink to={PATH.PRE_JUNIOR} activeClassName='active'>Pre-junior</NavLink>\n                <NavLink to={PATH.JUNIOR} activeClassName='active'>Junior</NavLink>\n                <NavLink to={PATH.JUNIOR_PLUS} activeClassName='active'>Junior+</NavLink>\n            </ul>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\n// import HW1 from '../../../p2-homeworks/h1/HW1'\n// import HW2 from \"../../../p2-homeworks/h2/HW2\";\n// import HW3 from '../../../p2-homeworks/h3/HW3';\n// import HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}